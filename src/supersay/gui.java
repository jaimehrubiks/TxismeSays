/*
 * JAIME HIDALGO.
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package supersay;

import com.alee.laf.filechooser.WebFileChooser;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.concurrent.Executors;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author Jaime Hidalgo Garc√≠a
 */
public class gui extends javax.swing.JFrame {
    
    

    /**
     * Creates new form gui
     */
    public gui() {
        
        initCustomPre();
        
        initComponents();
        
        initCustomAf();
        
        initEventListeners();
        
        
        
        
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        text_history = new javax.swing.JTextArea();
        panel_send = new javax.swing.JPanel();
        scroll_send = new javax.swing.JScrollPane();
        text_send = new javax.swing.JTextArea();
        button_send = new javax.swing.JButton();
        button_save = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_say = new javax.swing.JTable();
        button_edit = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        text_voice = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        b_save = new javax.swing.JMenuItem();
        b_load = new javax.swing.JMenuItem();
        b_exit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Txisme Says");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "History"));

        text_history.setColumns(20);
        text_history.setRows(5);
        jScrollPane3.setViewportView(text_history);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                .addContainerGap())
        );

        panel_send.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Say"));

        text_send.setColumns(20);
        text_send.setRows(5);
        scroll_send.setViewportView(text_send);

        button_send.setText("Say");
        button_send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_sendActionPerformed(evt);
            }
        });

        button_save.setText("Save");
        button_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_saveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_sendLayout = new javax.swing.GroupLayout(panel_send);
        panel_send.setLayout(panel_sendLayout);
        panel_sendLayout.setHorizontalGroup(
            panel_sendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_sendLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scroll_send, javax.swing.GroupLayout.DEFAULT_SIZE, 730, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_sendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button_send, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_save, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        panel_sendLayout.setVerticalGroup(
            panel_sendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_sendLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_sendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scroll_send, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                    .addGroup(panel_sendLayout.createSequentialGroup()
                        .addComponent(button_send, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button_save, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        table_say.setModel(model);
        table_say.setDragEnabled(true);
        table_say.setDropMode(javax.swing.DropMode.ON_OR_INSERT_ROWS);
        table_say.setRowHeight(26);
        table_say.setRowSelectionAllowed(false);
        table_say.setShowVerticalLines(false);
        jScrollPane1.setViewportView(table_say);

        button_edit.setText("Edit Mode");
        button_edit.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                button_editStateChanged(evt);
            }
        });
        button_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_editActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Orator Std", 0, 36)); // NOI18N
        jLabel1.setText("TXISME SAYS");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        text_voice.setText("Monica");

        jLabel2.setText("Voice:");

        jMenu1.setText("File");

        b_save.setText("Save File");
        b_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_saveActionPerformed(evt);
            }
        });
        jMenu1.add(b_save);

        b_load.setText("Load File");
        b_load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_loadActionPerformed(evt);
            }
        });
        jMenu1.add(b_load);

        b_exit.setText("Exit");
        b_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_exitActionPerformed(evt);
            }
        });
        jMenu1.add(b_exit);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 838, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panel_send, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(button_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(text_voice, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(text_voice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(button_edit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel_send, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_sendActionPerformed
        // TODO add your handling code here:
        txismeSays(text_send.getText(),text_voice.getText());
        appendHistory(text_send.getText());
        text_send.setText("");
        counter = history_chain.size() - 1;
    }//GEN-LAST:event_button_sendActionPerformed

    private void button_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_saveActionPerformed
        // TODO add your handling code here:
        String[] row = {"x",String.valueOf( saved_chain.size() ),text_send.getText(),"Say"};
        model.addRow(row);
        saved_chain.add(row);
        text_send.setText("");
    }//GEN-LAST:event_button_saveActionPerformed

    private void button_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_editActionPerformed
        // TODO add your handling code here:
                if (button_edit.isSelected()){
            model.setEditMode(true);
            //table_say.setDragEnabled(true);
        }
        else{
            model.setEditMode(false);
            //table_say.setDragEnabled(true);
            refactor_index();
        }
    }//GEN-LAST:event_button_editActionPerformed

    private void button_editStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_button_editStateChanged
        // TODO add your handling code here

        
        //    model.setCellEditable(x, WIDTH, rootPaneCheckingEnabled);//table_say.set
    }//GEN-LAST:event_button_editStateChanged

    private void b_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_saveActionPerformed
        ObjectOutputStream ous = null;
        try {
            // TODO add your handling code here:
            //File open = WebFileChooser.showOpenDialog ();
            File open = WebFileChooser.showSaveDialog();
            ous = new ObjectOutputStream(new DataOutputStream(new FileOutputStream(open)));
            ous.writeObject(saved_chain);
            ous.writeObject(history_chain);
        } catch (IOException ex) {
            Logger.getLogger(gui.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                ous.close();
            } catch (IOException ex) {
                Logger.getLogger(gui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
        
    }//GEN-LAST:event_b_saveActionPerformed

    private void b_loadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_loadActionPerformed
        // TODO add your handling code here:
        ObjectInputStream ois = null;
        try {
            // TODO add your handling code here:
            File open = WebFileChooser.showOpenDialog ();
            ois = new ObjectInputStream(new DataInputStream(new FileInputStream(open)));
            saved_chain   = (List<String[]>) ois.readObject();
            history_chain = (List<String>) ois.readObject();
            String[] data;
            for(int i = 0 ; i < model.getRowCount() ; i++ ) model.removeRow(i);
            for(int i = 0 ; i < saved_chain.size() ; i++ ){
                data = new String[4];
                data[0]="x";
                data[1]=String.valueOf(i);
                data[2]=saved_chain.get(i)[2];
                data[3]="Say";
                model.addRow(data);
            }
        } catch (IOException ex) {
            Logger.getLogger(gui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(gui.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                ois.close();
            } catch (IOException ex) {
                Logger.getLogger(gui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_b_loadActionPerformed

    private void b_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_exitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_b_exitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //System.setProperty("apple.laf.useScreenMenuBar", "false");
        //System.setProperty("com.apple.mrj.application.apple.menu.about.name", "Txisme Says");
        //System.setProperty("apple.awt.brushMetalLook", "true");
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel ( "com.alee.laf.WebLookAndFeel" );

//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new gui().setVisible(true);
            }
        });
    }
    
    private void appendHistory(String str){
        text_history.append(str);
        text_history.setCaretPosition(text_history.getDocument().getLength());
        history_chain.add(str);
    }
    
    private void txismeSays( final String str, final String voice){
        //String final chain = str;
        Executors.newSingleThreadExecutor().execute(new Runnable() {
            @Override
            public void run() {
                // code in here
                String text;
                
                if(str.charAt(0)=='/' ){
                    int val = Integer.valueOf( str.replace("/", "").replace("\n", "") );
                    text = saved_chain.get(val)[2];
                }else
                    text = str;
                
                
                try {
                    ProcessBuilder builder = new ProcessBuilder();
                    builder.command().add("/usr/bin/say");
                    builder.command().add("-v");
                    builder.command().add(voice);
                    builder.command().add(text);
                    builder.inheritIO();
                    Map<String, String> env = builder.environment();
                    env.put("PATH", env.get("PATH") + ":" + "/usr/bin/");
                    builder.redirectErrorStream(true);
                    Process p = builder.start();
                } catch (IOException ex) {
                    Logger.getLogger(gui.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
        
     private void initEventListeners(){
                 text_send.addKeyListener(new KeyListener() {
            @Override
            public void keyReleased(KeyEvent e) {
                if( e.getKeyCode() == KeyEvent.VK_ENTER  && !(e.getModifiers() == KeyEvent.SHIFT_MASK))
                    button_send.doClick();
                else if(e.getKeyCode() == KeyEvent.VK_UP && e.getModifiers() == KeyEvent.SHIFT_MASK ){
                    if(counter >= 0 && counter < history_chain.size()){
                        text_send.setText(history_chain.get(counter).trim());
                        if(counter>0)counter--;
                    }
                }
                else if(e.getKeyCode() == KeyEvent.VK_DOWN && e.getModifiers() == KeyEvent.SHIFT_MASK ){
                    if(counter >= 0 && counter < history_chain.size()){
                        text_send.setText(history_chain.get(counter).trim());
                        if(counter< (history_chain.size()-1))counter++;
                    }
                }
                else if( e.getKeyCode() == KeyEvent.VK_S  && e.getModifiers() == KeyEvent.CTRL_MASK){
                    text_send.setText("");
                }

                    
            }

            @Override
            public void keyTyped(KeyEvent e) {
            }

            @Override
            public void keyPressed(KeyEvent e) {
                if( e.getKeyCode() == KeyEvent.VK_ENTER  && e.getModifiers() == KeyEvent.SHIFT_MASK)
                    text_send.append("\n");
                else if( e.getKeyCode() == KeyEvent.VK_S  && e.getModifiers() == KeyEvent.CTRL_MASK){
                    button_save.doClick();
                }
                
                
            }
        });
     }

        
    private void initCustomPre(){
        
        String[] columnNames = new String[]{ "Del","N¬∫","Line" , "SAY" };
        model = new TableModel(columnNames,0);

        
    }    
    
    private void initCustomAf(){
        int k;
        table_say.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        table_say.getColumnModel().getColumn(0).setMinWidth(50);
        table_say.getColumnModel().getColumn(0).setMaxWidth(50);
        table_say.getColumnModel().getColumn(1).setMinWidth(50);
        table_say.getColumnModel().getColumn(1).setMaxWidth(50);
        //table_say.getColumnModel().getColumn(2).setPreferredWidth(27);
        table_say.getColumnModel().getColumn(3).setMinWidth(50);
        table_say.getColumnModel().getColumn(3).setMaxWidth(50);
        int j = 0;
        String[] row = {"x",String.valueOf( j ),"Frases Predefinidas","Say"};
        
        //for(int i = 1 ; i <= 10 ; i++){
        //    row[1] = String.valueOf( j++ );
            model.addRow(row);
        //}
        
        saved_chain.add(row);
        ///refactor_index();
        //table_say.setTransferHandler(new TableRowTransferHandler(table_say)); 
        
        ButtonColumn b_say = new ButtonColumn(table_say,action_say,3);
        ButtonColumn b_del = new ButtonColumn(table_say,action_del,0);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        table_say.getColumnModel().getColumn(1).setCellRenderer( centerRenderer );
        
    }
    
    private void refactor_index(){
        saved_chain = new ArrayList<>();
        String[] array;
        for(int i = 0 ; i < model.getRowCount() ; i++){
            array = new String[4];
            array[0] = (String) table_say.getValueAt(i, 0);
            array[1] = (String) table_say.getValueAt(i, 1);
            array[2] = (String) table_say.getValueAt(i, 2);
            array[3] = (String) table_say.getValueAt(i, 3);
            saved_chain.add(array);
            //System.out.println(i);
            model.setValueAt(String.valueOf(i), i, 1);
           
            //System.out.println(array[2]);
        }
        //System.out.println(saved_chain.get(0)[2]);
            
    }
    
    private List<String> history_chain = new ArrayList<>();
    private int counter = 0;
    private TableModel model;
    private List<String[]> saved_chain   = new ArrayList<>();
    
    
    
    
    Action action_say = new AbstractAction() {
        @Override
        public void actionPerformed(ActionEvent e)
        {
            int modelRow = Integer.valueOf( e.getActionCommand() );
            String ref = saved_chain.get(modelRow)[2];
            txismeSays(ref,text_voice.getText());
            //System.out.println("a");
            //System.out.println(modelRow);
            //System.out.println(saved_chain.get(modelRow)[2]);
        }
    };
    
    Action action_del = new AbstractAction() {
        @Override
        public void actionPerformed(ActionEvent e)
        {
            int modelRow = Integer.valueOf( e.getActionCommand() );
            model.removeRow(modelRow);
        }
    };
    
    //private 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem b_exit;
    private javax.swing.JMenuItem b_load;
    private javax.swing.JMenuItem b_save;
    private javax.swing.JToggleButton button_edit;
    private javax.swing.JButton button_save;
    private javax.swing.JButton button_send;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel panel_send;
    private javax.swing.JScrollPane scroll_send;
    private javax.swing.JTable table_say;
    private javax.swing.JTextArea text_history;
    private javax.swing.JTextArea text_send;
    private javax.swing.JTextField text_voice;
    // End of variables declaration//GEN-END:variables
}
